properties([parameters([string(defaultValue: "1.3.9", description: 'CLI Version', name: 'cli_version'), choice(name: 'zone_id', choices: ['defaultzone', 'rroum', 'DIOuN'], description: 'Zone Identifier (1. Static or 2. Dynamic or 3. Docker)'), string(defaultValue: "https://dockerps3.apps.neotys.com:8080", description: 'NeoLoad Web Api Url', name: 'api_url'), string(defaultValue: "nwilliams_TC", description: 'Unique Test Case Name', name: 'test_name')])])

node('dockerps3_host') {
  stage('Install the NLWeb CLI') {
    sh """python3 --version
          pip3 --version
          sudo pip3 install neoload==${cli_version}
          neoload --version"""
  }
  stage('Login to the NLWeb CLI') {
    withCredentials([string(credentialsId: 'NLW_TOKEN', variable: 'NLW_TOKEN')]) {
      sh "neoload login --url ${api_url} --ssl-cert False $NLW_TOKEN"
    }
  }
  stage('Checkout the NL project') {
    checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'neoload-project-${BUILD_NUMBER}']], userRemoteConfigs: [[credentialsId: 'theqmguy', url: 'https://github.com/theqmguy/neoload-ci-training.git']]])
  }
  stage('Create the NLWeb Test') {
    sh """neoload workspaces use 'Default Workspace' \
          test-settings --zone ${zone_id} --lgs 1 --scenario sanityScenario --description 'Do NOT Delete (Build ${BUILD_NUMBER})' createorpatch ${test_name} \
          project --path "$WORKSPACE/neoload-project-${BUILD_NUMBER}/tests/neoload_projects/example_1/" upload ${test_name}"""
  }
  stage('Execute the NLWeb Test') {
    sh """neoload run \
          --web-vu 20 \
          --detached \
          ${test_name}"""
    sh "neoload logs-url cur"
    sh "neoload fastfail --max-failure 25 slas cur"
  }
  //stage('Publish Results to Jenkins') {
  //  sh """neoload test-results junitsla"""
  //  sh "sed -i 's/\\<br\\/\\>/\\n/g' junit-sla.xml"
  //  junit 'junit-sla.xml'
  //}
  stage('Uninstall the NLWeb CLI') {
    sh """sudo pip3 uninstall --yes neoload==${cli_version}"""  
  }
  stage('Reports') {
    sh "mkdir -p reports"
                      script {
                        sh """neoload report --filter='timespan=10%-90%' \
                              --template builtin:transactions-csv \
                              --out-file reports/neoload-transactions.csv \
                              cur
                         """

                        sh """neoload report --filter='timespan=10%-90%' \
                              --template reporting/jinja/sample-custom-report.html.j2 \
                              --out-file reports/neoload-results.html \
                              cur
                         """
                        publishHTML (target: [
                           allowMissing: false,
                           alwaysLinkToLastBuild: false,
                           keepAll: true,
                           reportDir: 'reports',
                           reportFiles: 'neoload-results.html',
                           reportName: "NeoLoad Test Results"
                        ])

                        sh """neoload report --filter='timespan=10%-90%;results=-5' \
                              --template reporting/jinja/sample-trends-report.html.j2 \
                              --out-file reports/neoload-trends.html \
                              --type trends \
                              cur
                         """
                        publishHTML (target: [
                           allowMissing: false,
                           alwaysLinkToLastBuild: false,
                           keepAll: true,
                           reportDir: 'reports',
                           reportFiles: 'neoload-trends.html',
                           reportName: "NeoLoad Trends (Custom)"
                         ]) 
                      }
  }
  
}
