properties([parameters([string(defaultValue: "1.3.9", description: 'CLI Version', name: 'cli_version'), choice(name: 'zone_id', choices: ['defaultzone', 'rroum', 'DIOuN'], description: 'Zone Identifier (1. Static or 2. Dynamic or 3. Docker)'), string(defaultValue: "https://dockerps3.apps.neotys.com:8080", description: 'NeoLoad Web Api Url', name: 'api_url'), string(defaultValue: "nwilliams_TC", description: 'Unique Test Case Name', name: 'test_name')])])

node('dockerps3_host') {
  stage('Install the NLWeb CLI') {
    sh """python3 --version
          pip3 --version
          sudo pip3 install neoload==${cli_version}
          neoload --version"""
  }
  stage('Login to the NLWeb CLI') {
    withCredentials([string(credentialsId: 'NLW_TOKEN', variable: 'NLW_TOKEN')]) {
      sh "neoload login --url ${api_url} --ssl-cert False $NLW_TOKEN"
    }
  }
  stage('Checkout the NL project') {
    checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'neoload-project-${BUILD_NUMBER}']], userRemoteConfigs: [[credentialsId: 'theqmguy', url: 'https://github.com/theqmguy/neoload-ci-training.git']]])
  }
  stage('Create the NLWeb Test') {
    //steps {
      script {
        def verify_zone_id = zone_id
        if(verify_zone_id.trim().toLowerCase().equals("null")) verify_zone_id = ""
        if(verify_zone_id.trim().length() < 1) // dynamically pick a zone
          verify_zone_id = sh(script: "neoload zones | jq '[.[]|select((.controllers|select(.[].status==\"AVAILABLE\")|length>0) and (.loadgenerators|select(.[].status==\"AVAILABLE\")|length>0) and (.type==\"STATIC\"))][0] | .id' -r", returnStdout: true).trim()

          if(verify_zone_id == null)
            error "No zones with available infrastructure were found! Please run 'Start Infra' job."

          sh "neoload test-settings --zone ${verify_zone_id} --lgs 1 --scenario 'sanityScenario' --description 'Do NOT Delete (Build ${BUILD_NUMBER})' createorpatch ${test_name}"
        }
      sh """neoload project --path "$WORKSPACE/neoload-project-${BUILD_NUMBER}/tests/neoload_projects/example_1/" upload ${test_name}"""
      sh "neoload status"
    //}
  }
  stage('Execute the NLWeb Test') {
    sh """neoload run \
          --return-0 \
          --web-vu 20 \
          ${test_name}"""
  }
  stage('Uninstall the NLWeb CLI') {
    sh """sudo pip3 uninstall --yes neoload==${cli_version}"""  
  }
}
