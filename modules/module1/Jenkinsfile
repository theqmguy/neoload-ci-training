pipeline {
  agent none

  parameters {
    string(defaultValue: "1.3.9", description: 'CLI Version', name: 'cli_version')
    choice(name: 'zone_id', choices: ['rroum'], description: 'Zone Identifier')
    string(defaultValue: "https://dockerps3.apps.neotys.com:8080", description: 'NeoLoad Web Api Url', name: 'api_url')
  }

  stages {
    stage('Attach Worker') {
      agent {
        docker {
          image 'python:3-alpine'
        }
      }
      stages {
        stage('Get NeoLoad CLI') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
              sh """python --version
                    pip3 --version
                    pip3 install neoload==${params.cli_version}
                    export PATH=$PATH:.local/bin
                    neoload --version"""
            }
          }
        }
        stage('Checkout Project') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
              checkout([$class: 'GitSCM', branches: [[name: "*/$CPV_ENV"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'neoload-project-${BUILD_NUMBER}']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'CodeCommit', url: 'http://jenkins:9090/git/tester/CPVWeatherCrisis.git']]])
              sh """ls -la neoload-project-${BUILD_NUMBER}"""
            }
          }
        }
        stage('Prepare Neoload test') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
            withCredentials([string(credentialsId: 'SEC_TOKEN', variable: 'NLW_TOKEN')]) {
              sh """export PATH=$PATH:.local/bin
                    neoload \
                     login --url ${params.api_url} $NLW_TOKEN \
                     workspaces use 'Default Workspace' \
                     test-settings --zone ${params.zone_id} --lgs 1 --scenario 'sanityScenario' --description 'Do NOT Delete (Build ${BUILD_NUMBER})' createorpatch cpv-cli-demo-keep \
                     project --path tests/neoload_projects/example_1/ upload
                """
            }
            }
          }
        }
        stage('Run Test') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
              sh """export PATH=$PATH:.local/bin
                    neoload run \
                  --return-0 \
                  --web-vu 50 \
                  cpv-cli-demo-keep \
                 """
            }
          }
        }
        stage('Generate Test Result') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
                sh """export PATH=$PATH:.local/bin
                    neoload test-results junitsla"""
            }
          }
          post {
              always {
                  junit 'junit-sla.xml'
              }
          }
        }
        stage('Remove NeoLoad CLI') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
              sh """pip3 uninstall --yes neoload==${params.cli_version}"""
            }
          }
        }
      }
    }
  }
}
